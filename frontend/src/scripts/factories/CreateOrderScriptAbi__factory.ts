/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.41.0
  Forc version: 0.35.5
  Fuel-Core version: 0.17.3
*/

import {
  Account,
  BigNumberish,
  BN,
  Script,
} from 'fuels';

export type AddressInput = { value: string };
export type AddressOutput = AddressInput;
export type ContractIdInput = { value: string };
export type ContractIdOutput = ContractIdInput;
export type CreateOrderParamsInput = { id: string, predicate_address: AddressInput, amount0: BigNumberish, asset0: ContractIdInput, amount1: BigNumberish, asset1: ContractIdInput, owner: AddressInput };
export type CreateOrderParamsOutput = { id: string, predicate_address: AddressOutput, amount0: BN, asset0: ContractIdOutput, amount1: BN, asset1: ContractIdOutput, owner: AddressOutput };

type CreateOrderScriptAbiInputs = [params: CreateOrderParamsInput];
type CreateOrderScriptAbiOutput = void;

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "()",
      "components": [],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "str[30]",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "struct Address",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 4,
      "type": "struct ContractId",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 5,
      "type": "struct CreateOrderParams",
      "components": [
        {
          "name": "id",
          "type": 2,
          "typeArguments": null
        },
        {
          "name": "predicate_address",
          "type": 3,
          "typeArguments": null
        },
        {
          "name": "amount0",
          "type": 6,
          "typeArguments": null
        },
        {
          "name": "asset0",
          "type": 4,
          "typeArguments": null
        },
        {
          "name": "amount1",
          "type": 6,
          "typeArguments": null
        },
        {
          "name": "asset1",
          "type": 4,
          "typeArguments": null
        },
        {
          "name": "owner",
          "type": 3,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 6,
      "type": "u64",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "params",
          "type": 5,
          "typeArguments": null
        }
      ],
      "name": "main",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": null
    }
  ],
  "loggedTypes": [
    {
      "logId": 0,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    }
  ],
  "messagesTypes": [],
  "configurables": []
}

const _bin = '0x9000000447000000000000000000045c5dfcc00110fff3006148000c1a585000910003c8504562b8724000b028452400724000b034000450724000b028592400504160405d4d0000504160d0724400b02841244050610048504561b8724000b028452400505d1020614400011341100073400026134110407340002036000000504561b05f4410005049639072400008284914009000002b504560c85f440000504963907240000828491400504563807240000828452400504163805d410000134100007340003a504163805d4100001341004073400038615400179000003b615400179000003b615400081a50000016414540734000405d43f0003640000061454201134110007340006a13411040734000645d43f001134114007340005d5d43f00213411400734000565d43f003134114007340004f36000000504562a85d43f0035f4500005049639872400008284914009000006f504562985d43f0025f4500005049639872400008284914009000006f504562885d43f0015f4500005049639872400008284914009000006f504561a05f4410005049639872400008284914009000006f504560b85f440000504963987240000828491400504560b072400008284524005d4510005d43f0031341140073400077900000d56145420113411000734000a1134110407340009b5d43f00113411400734000945d43f002134114007340008d5d43f003134114007340008636000000504562b05d43f0035f450000504963a07240000828491400900000a6504562a05d43f0025f450000504963a07240000828491400900000a6504562905d43f0015f450000504963a07240000828491400900000a6504561a85f441000504963a07240000828491400900000a6504160c05f400000504963a07244000828490440504563887240000828452400504163885d41000013410000734000d2504163885d41000013410040734000d1504163885d4500005d43f00113411400734000cf504163885d4500005d43f002134514001a400000734400d3504163885d4500005d43f00313411400734000c81aed400072f800c4900000df1a43d000504100285d410000900000d31aed400072f800cb900000df1a43d000504100285d410000900000d361414209900000d3360000006141420313410000734000d7105140409000003c5049618072400020284974005045626872400020284584003d4944d1240000001af05000910000305ff100005ff110015ff120025ff130035ff140045ff150051a57b0001a53e0001a4c5000910000286144000113411000734000f713411040734000f136000000504530085f441000504930207240000828491400900000fb5f4c0000504930207240000828493400504530187240000828452400504130185d410000134100007340010a504130185d41000013410040734001086141501c9000010b6141501c9000010b6141500e1af50000920000281af9400059f050305d43c0005d47c0015d4bc0025d4fc0035d53c0045d57c005920000304af80000ffffffffffff0001000000000000000200000000000000030000000000000004'

export class CreateOrderScriptAbi__factory {

  static readonly abi = _abi
  static readonly bin = _bin

  static createInstance(wallet: Account) {

    const { abi, bin } = CreateOrderScriptAbi__factory

    const script = new Script<
      CreateOrderScriptAbiInputs,
      CreateOrderScriptAbiOutput
    >(bin, abi, wallet);

    return script;

  }

}
