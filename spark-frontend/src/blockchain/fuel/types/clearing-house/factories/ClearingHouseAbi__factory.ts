/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.77.0
  Forc version: 0.51.1
  Fuel-Core version: 0.22.1
*/

import { Interface, Contract, ContractFactory } from "fuels";
import type { Provider, Account, AbstractAddress, BytesLike, DeployContractOptions, StorageSlot } from "fuels";
import type { ClearingHouseAbi, ClearingHouseAbiInterface } from "../ClearingHouseAbi";

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "()",
      "components": [],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "(_, _)",
      "components": [
        {
          "name": "__tuple_element",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "__tuple_element",
          "type": 14,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "(_, _)",
      "components": [
        {
          "name": "__tuple_element",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "__tuple_element",
          "type": 20,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 4,
      "type": "bool",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 5,
      "type": "enum Error",
      "components": [
        {
          "name": "PositionSizeIsZero",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "MarketNotFound",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "MarketNotPaused",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "MarketNotOpened",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "MarketAlreadyExists",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "OnlyVaultOrTrader",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "BaseTokenDoesNotExists",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "CannotLiquidateWhenThereIsStillOrder",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "EnoughAccountValue",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "WrongLiquidationDirection",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "InsufficientInsuranceFundCapacity",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "NotEnoughFreeCollateralByImRatio",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "AccessDenied",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 6,
      "type": "enum MarketStatus",
      "components": [
        {
          "name": "Opened",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Paused",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Closed",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 7,
      "type": "enum Option",
      "components": [
        {
          "name": "None",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Some",
          "type": 9,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        9
      ]
    },
    {
      "typeId": 8,
      "type": "enum ReentrancyError",
      "components": [
        {
          "name": "NonReentrant",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 9,
      "type": "generic T",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 10,
      "type": "raw untyped ptr",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 11,
      "type": "struct Address",
      "components": [
        {
          "name": "value",
          "type": 3,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 12,
      "type": "struct AssetId",
      "components": [
        {
          "name": "value",
          "type": 3,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 13,
      "type": "struct Bytes",
      "components": [
        {
          "name": "buf",
          "type": 16,
          "typeArguments": null
        },
        {
          "name": "len",
          "type": 20,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 14,
      "type": "struct I64",
      "components": [
        {
          "name": "value",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "negative",
          "type": 4,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 15,
      "type": "struct Market",
      "components": [
        {
          "name": "asset_id",
          "type": 12,
          "typeArguments": null
        },
        {
          "name": "decimal",
          "type": 19,
          "typeArguments": null
        },
        {
          "name": "price_feed",
          "type": 3,
          "typeArguments": null
        },
        {
          "name": "im_ratio",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "mm_ratio",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "status",
          "type": 6,
          "typeArguments": null
        },
        {
          "name": "paused_index_price",
          "type": 7,
          "typeArguments": [
            {
              "name": "",
              "type": 20,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "paused_timestamp",
          "type": 7,
          "typeArguments": [
            {
              "name": "",
              "type": 20,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "closed_price",
          "type": 7,
          "typeArguments": [
            {
              "name": "",
              "type": 20,
              "typeArguments": null
            }
          ]
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 16,
      "type": "struct RawBytes",
      "components": [
        {
          "name": "ptr",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "cap",
          "type": 20,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 17,
      "type": "struct RawVec",
      "components": [
        {
          "name": "ptr",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "cap",
          "type": 20,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        9
      ]
    },
    {
      "typeId": 18,
      "type": "struct Vec",
      "components": [
        {
          "name": "buf",
          "type": 17,
          "typeArguments": [
            {
              "name": "",
              "type": 9,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "len",
          "type": 20,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        9
      ]
    },
    {
      "typeId": 19,
      "type": "u32",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 20,
      "type": "u64",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "address",
          "type": 11,
          "typeArguments": null
        }
      ],
      "name": "add_admin",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "base_token",
          "type": 12,
          "typeArguments": null
        }
      ],
      "name": "check_market_open",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "base_token",
          "type": 12,
          "typeArguments": null
        },
        {
          "name": "closed_price",
          "type": 20,
          "typeArguments": null
        }
      ],
      "name": "close_market",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset_id",
          "type": 12,
          "typeArguments": null
        },
        {
          "name": "decimal",
          "type": 19,
          "typeArguments": null
        },
        {
          "name": "price_feed",
          "type": 3,
          "typeArguments": null
        },
        {
          "name": "im_ratio",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "mm_ratio",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "initial_price",
          "type": 20,
          "typeArguments": null
        }
      ],
      "name": "create_market",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "base_size",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "order_id",
          "type": 3,
          "typeArguments": null
        },
        {
          "name": "price_update_data",
          "type": 18,
          "typeArguments": [
            {
              "name": "",
              "type": 13,
              "typeArguments": null
            }
          ]
        }
      ],
      "name": "fulfill_order",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "type": 11,
          "typeArguments": null
        }
      ],
      "name": "get_account_value",
      "output": {
        "name": "",
        "type": 14,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "base_token",
          "type": 12,
          "typeArguments": null
        },
        {
          "name": "account_value",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "position_size_to_be_liquidated",
          "type": 14,
          "typeArguments": null
        }
      ],
      "name": "get_liquidated_position_size_and_notional",
      "output": {
        "name": "",
        "type": 1,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "type": 11,
          "typeArguments": null
        }
      ],
      "name": "get_margin_requirement_for_liquidation",
      "output": {
        "name": "",
        "type": 20,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "base_token",
          "type": 12,
          "typeArguments": null
        }
      ],
      "name": "get_market",
      "output": {
        "name": "",
        "type": 15,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "base_asset",
          "type": 12,
          "typeArguments": null
        }
      ],
      "name": "get_max_abs_position_size",
      "output": {
        "name": "",
        "type": 2,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "base_token",
          "type": 12,
          "typeArguments": null
        }
      ],
      "name": "get_taker_open_notional",
      "output": {
        "name": "",
        "type": 14,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "base_token",
          "type": 12,
          "typeArguments": null
        }
      ],
      "name": "get_taker_position",
      "output": {
        "name": "",
        "type": 14,
        "typeArguments": null
      },
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "trader",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "base_token",
          "type": 12,
          "typeArguments": null
        }
      ],
      "name": "get_taker_position_safe",
      "output": {
        "name": "",
        "type": 14,
        "typeArguments": null
      },
      "attributes": null
    },
    {
      "inputs": [
        {
          "name": "trader",
          "type": 11,
          "typeArguments": null
        }
      ],
      "name": "is_liquidatable",
      "output": {
        "name": "",
        "type": 4,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "type": 11,
          "typeArguments": null
        },
        {
          "name": "base_token",
          "type": 12,
          "typeArguments": null
        },
        {
          "name": "position_size",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "price_update_data",
          "type": 18,
          "typeArguments": [
            {
              "name": "",
              "type": 13,
              "typeArguments": null
            }
          ]
        }
      ],
      "name": "liquidate",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        },
        {
          "name": "payable",
          "arguments": []
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "order_sell_id",
          "type": 3,
          "typeArguments": null
        },
        {
          "name": "order_buy_id",
          "type": 3,
          "typeArguments": null
        },
        {
          "name": "price_update_data",
          "type": 18,
          "typeArguments": [
            {
              "name": "",
              "type": 13,
              "typeArguments": null
            }
          ]
        }
      ],
      "name": "match_orders",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "payable",
          "arguments": []
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "base_token",
          "type": 12,
          "typeArguments": null
        },
        {
          "name": "base_size",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "order_price",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "price_update_data",
          "type": 18,
          "typeArguments": [
            {
              "name": "",
              "type": 13,
              "typeArguments": null
            }
          ]
        }
      ],
      "name": "open_order",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        },
        {
          "name": "payable",
          "arguments": []
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "base_token",
          "type": 12,
          "typeArguments": null
        },
        {
          "name": "update_data",
          "type": 18,
          "typeArguments": [
            {
              "name": "",
              "type": 13,
              "typeArguments": null
            }
          ]
        }
      ],
      "name": "pause_market",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        },
        {
          "name": "payable",
          "arguments": []
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "address",
          "type": 11,
          "typeArguments": null
        }
      ],
      "name": "remove_admin",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "remove_all_orders",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "order_id",
          "type": 3,
          "typeArguments": null
        }
      ],
      "name": "remove_order",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "type": 11,
          "typeArguments": null
        }
      ],
      "name": "remove_uncollaterised_orders",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "type": 11,
          "typeArguments": null
        }
      ],
      "name": "require_enough_free_collateral",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "trader",
          "type": 11,
          "typeArguments": null
        }
      ],
      "name": "settle_all_funding",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "base_token",
          "type": 12,
          "typeArguments": null
        }
      ],
      "name": "unpause_market",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "insurance_fund_fee_share",
          "type": 20,
          "typeArguments": null
        }
      ],
      "name": "update_insurance_fund_fee_share",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "liquidation_penalty_ratio",
          "type": 20,
          "typeArguments": null
        }
      ],
      "name": "update_liquidation_penalty_ratio",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "fee_rate",
          "type": 20,
          "typeArguments": null
        }
      ],
      "name": "update_matcher_fee_rate",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "max_funding_rate",
          "type": 20,
          "typeArguments": null
        }
      ],
      "name": "update_max_funding_rate",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "protocol_fee_rate",
          "type": 20,
          "typeArguments": null
        }
      ],
      "name": "update_protocol_fee_rate",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "fee_rate",
          "type": 20,
          "typeArguments": null
        }
      ],
      "name": "update_taker_fee_rate",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": 0,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 1,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 2,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 3,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 4,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 5,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 6,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 7,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 8,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 9,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 10,
      "loggedType": {
        "name": "",
        "type": 8,
        "typeArguments": []
      }
    },
    {
      "logId": 11,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 12,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 13,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 14,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 15,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 16,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 17,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 18,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 19,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 20,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 21,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 22,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 23,
      "loggedType": {
        "name": "",
        "type": 8,
        "typeArguments": []
      }
    },
    {
      "logId": 24,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 25,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 26,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 27,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 28,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 29,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 30,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 31,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 32,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 33,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 34,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 35,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 36,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 37,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 38,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 39,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    },
    {
      "logId": 40,
      "loggedType": {
        "name": "",
        "type": 5,
        "typeArguments": []
      }
    }
  ],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "OWNER",
      "configurableType": {
        "name": "",
        "type": 11,
        "typeArguments": []
      },
      "offset": 61792
    },
    {
      "name": "PROXY_ADDRESS",
      "configurableType": {
        "name": "",
        "type": 11,
        "typeArguments": []
      },
      "offset": 61984
    }
  ]
};

const _storageSlots: StorageSlot[] = [
  {
    "key": "02dac99c283f16bc91b74f6942db7f012699a2ad51272b15207b9cc14a70dbae",
    "value": "00000000000001f4000000000000000000000000000000000000000000000000"
  },
  {
    "key": "6294951dcb0a9111a517be5cf4785670ff4e166fb5ab9c33b17e6881b48e964f",
    "value": "00000000000003e8000000000000000000000000000000000000000000000000"
  },
  {
    "key": "f383b0ce51358be57daa3b725fe44acdb2d880604e367199080b4379c41bb6ed",
    "value": "0000000000030d40000000000000000000000000000000000000000000000000"
  }
];

export class ClearingHouseAbi__factory {
  static readonly abi = _abi;

  static readonly storageSlots = _storageSlots;

  static createInterface(): ClearingHouseAbiInterface {
    return new Interface(_abi) as unknown as ClearingHouseAbiInterface
  }

  static connect(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider
  ): ClearingHouseAbi {
    return new Contract(id, _abi, accountOrProvider) as unknown as ClearingHouseAbi
  }

  static async deployContract(
    bytecode: BytesLike,
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<ClearingHouseAbi> {
    const factory = new ContractFactory(bytecode, _abi, wallet);

    const { storageSlots } = ClearingHouseAbi__factory;

    const contract = await factory.deployContract({
      storageSlots,
      ...options,
    });

    return contract as unknown as ClearingHouseAbi;
  }
}
